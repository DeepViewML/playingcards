stages:
  train:
    cmd: python3 -m deepview.modelpack.trainer --load=params.yaml --dataset=dataset.yaml
      --dvclive=out --report=md
    params:
    - params.yaml:
    deps:
    - dataset
    - dataset.yaml
    outs:
    - out/config.json
    - out/labels.txt
    - out/last.h5
    - out/best.h5
    - out/report.md
    - out/static
  convert:
    cmd:
    - deepview-converter --quantize --quant-tensor --quant_normalization unsigned
      --samples dataset/images/quant --input_type uint8 --output-type int8 --labels
      out/labels.txt out/best.h5 out/best.rtm
    deps:
    - dataset
    - dataset.yaml
    - out/best.rtm
    - out/labels.txt
  validate:
    cmd:
    - deepview-validator --dataset dataset.yaml --json_out out/val --norm unsigned
      --validation_score 0.25 --detection_score 0.25 --detection_iou 0.5 --labels_file
      out/labels.txt -l 1 out/best.h5
    - jq -f metrics.json out/val/results.json > out/val/metrics.json
    - deepview-validator --dataset dataset.yaml --json_out out/val-rtm --norm unsigned
      --validation_score 0.25 --detection_score 0.25 --detection_iou 0.5 out/best.rtm
    - jq -f metrics.json out/val-rtm/results.json > out/val-rtm/metrics.json
    metrics:
    - out/val/metrics.json
    - out/val-rtm/metrics.json
    deps:
    - dataset
    - dataset.yaml
    - out/best.h5
    - out/labels.txt
params:
- out/params.yaml
plots:
- out/plots/metrics:
    x: step
metrics:
- out/metrics.json
